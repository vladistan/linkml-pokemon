# metamodel_version: 1.7.0
BASE <https://pokemonkg.org/ontology#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX linkml: <https://w3id.org/linkml/>


linkml:String xsd:string

linkml:Integer xsd:integer

linkml:Boolean xsd:boolean

linkml:Float xsd:float

linkml:Double xsd:double

linkml:Decimal xsd:decimal

linkml:Time xsd:time

linkml:Date xsd:date

linkml:Datetime xsd:dateTime

linkml:DateOrDatetime linkml:DateOrDatetime

linkml:Uriorcurie IRI

linkml:Curie xsd:string

linkml:Uri IRI

linkml:Ncname xsd:string

linkml:Objectidentifier IRI

linkml:Nodeidentifier NONLITERAL

linkml:Jsonpointer xsd:string

linkml:Jsonpath xsd:string

linkml:Sparqlpath xsd:string

<Ability> CLOSED {
    (  $<Ability_tes> rdf:type . * ;
       rdf:type [ <Ability> ] ?
    )
}

<BattleItem> CLOSED {
    (  $<BattleItem_tes> (  &<Item_tes> ;
          rdf:type [ <Item> ] ?
       ) ;
       rdf:type [ <BattleItem> ] ?
    )
}

<Berry> CLOSED {
    (  $<Berry_tes> (  &<Food_tes> ;
          rdf:type [ <Food> ] ?
       ) ;
       rdf:type [ <Berry> ] ?
    )
}

<Colour> CLOSED {
    (  $<Colour_tes> rdf:type . * ;
       rdf:type [ <Colour> ] ?
    )
}

<EggGroup> CLOSED {
    (  $<EggGroup_tes> rdf:type . * ;
       rdf:type [ <EggGroup> ] ?
    )
}

<Flavor> CLOSED {
    (  $<Flavor_tes> rdf:type . * ;
       rdf:type [ <Flavor> ] ?
    )
}

<Food>  (
    CLOSED {
       (  $<Food_tes> (  &<Item_tes> ;
             rdf:type [ <Item> ] ?
          ) ;
          rdf:type [ <Food> ] ?
       )
    } OR @<Berry>
)

<Game> CLOSED {
    (  $<Game_tes> rdf:type . * ;
       rdf:type [ <Game> ] ?
    )
}

<Generation> CLOSED {
    (  $<Generation_tes> rdf:type . * ;
       rdf:type [ <Generation> ] ?
    )
}

<Gym> CLOSED {
    (  $<Gym_tes> (  &<Place_tes> ;
          rdf:type [ <Place> ] ?
       ) ;
       rdf:type [ <Gym> ] ?
    )
}

<GymLeader> CLOSED {
    (  $<GymLeader_tes> (  &<Trainer_tes> ;
          rdf:type [ <Trainer> ] ?
       ) ;
       rdf:type [ <GymLeader> ] ?
    )
}

<Habitat> CLOSED {
    (  $<Habitat_tes> rdf:type . * ;
       rdf:type [ <Habitat> ] ?
    )
}

<HM> CLOSED {
    (  $<HM_tes> (  &<Item_tes> ;
          rdf:type [ <Item> ] ?
       ) ;
       rdf:type [ <HM> ] ?
    )
}

<HoldItem> CLOSED {
    (  $<HoldItem_tes> (  &<Item_tes> ;
          rdf:type [ <Item> ] ?
       ) ;
       rdf:type [ <HoldItem> ] ?
    )
}

<Item>  (
    CLOSED {
       (  $<Item_tes> rdf:type . * ;
          rdf:type [ <Item> ] ?
       )
    } OR @<BattleItem> OR @<Food> OR @<HM> OR @<HoldItem> OR @<Medicine> OR @<Pokeball> OR @<TM>
)

<LearningByLevelingUp> CLOSED {
    (  $<LearningByLevelingUp_tes> (  &<MoveLearning_tes> ;
          rdf:type [ <MoveLearning> ] ?
       ) ;
       rdf:type [ <LearningByLevelingUp> ] ?
    )
}

<LearningThroughBreeding> CLOSED {
    (  $<LearningThroughBreeding_tes> (  &<MoveLearning_tes> ;
          rdf:type [ <MoveLearning> ] ?
       ) ;
       rdf:type [ <LearningThroughBreeding> ] ?
    )
}

<Medicine> CLOSED {
    (  $<Medicine_tes> (  &<Item_tes> ;
          rdf:type [ <Item> ] ?
       ) ;
       rdf:type [ <Medicine> ] ?
    )
}

<Move>  (
    CLOSED {
       (  $<Move_tes> rdf:type . * ;
          rdf:type [ <Move> ] ?
       )
    } OR @<PhysicalMove> OR @<SpecialMove> OR @<StatusMove>
)

<MoveLearning>  (
    CLOSED {
       (  $<MoveLearning_tes> rdf:type . * ;
          rdf:type [ <MoveLearning> ] ?
       )
    } OR @<LearningByLevelingUp> OR @<LearningThroughBreeding>
)

<PhysicalMove> CLOSED {
    (  $<PhysicalMove_tes> (  &<Move_tes> ;
          rdf:type [ <Move> ] ?
       ) ;
       rdf:type [ <PhysicalMove> ] ?
    )
}

<Place>  (
    CLOSED {
       (  $<Place_tes> rdf:type . * ;
          rdf:type [ <Place> ] ?
       )
    } OR @<Gym> OR @<Region> OR @<Town>
)

<Pokeball> CLOSED {
    (  $<Pokeball_tes> (  &<Item_tes> ;
          rdf:type [ <Item> ] ?
       ) ;
       rdf:type [ <Pokeball> ] ?
    )
}

<Pokedex> CLOSED {
    (  $<Pokedex_tes> rdf:type . * ;
       rdf:type [ <Pokedex> ] ?
    )
}

<PokedexEntry> CLOSED {
    (  $<PokedexEntry_tes> rdf:type . * ;
       rdf:type [ <PokedexEntry> ] ?
    )
}

<Pokemon> CLOSED {
    (  $<Pokemon_tes> rdf:type . * ;
       rdf:type [ <Pokemon> ] ?
    )
}

<Region> CLOSED {
    (  $<Region_tes> (  &<Place_tes> ;
          rdf:type [ <Place> ] ?
       ) ;
       rdf:type [ <Region> ] ?
    )
}

<Shape> CLOSED {
    (  $<Shape_tes> rdf:type . * ;
       rdf:type [ <Shape> ] ?
    )
}

<SpecialMove> CLOSED {
    (  $<SpecialMove_tes> (  &<Move_tes> ;
          rdf:type [ <Move> ] ?
       ) ;
       rdf:type [ <SpecialMove> ] ?
    )
}

<Species> CLOSED {
    (  $<Species_tes> rdf:type . * ;
       rdf:type [ <Species> ] ?
    )
}

<StatusMove> CLOSED {
    (  $<StatusMove_tes> (  &<Move_tes> ;
          rdf:type [ <Move> ] ?
       ) ;
       rdf:type [ <StatusMove> ] ?
    )
}

<TM> CLOSED {
    (  $<TM_tes> (  &<Item_tes> ;
          rdf:type [ <Item> ] ?
       ) ;
       rdf:type [ <TM> ] ?
    )
}

<Town> CLOSED {
    (  $<Town_tes> (  &<Place_tes> ;
          rdf:type [ <Place> ] ?
       ) ;
       rdf:type [ <Town> ] ?
    )
}

<Trainer>  (
    CLOSED {
       (  $<Trainer_tes> rdf:type . * ;
          rdf:type [ <Trainer> ] ?
       )
    } OR @<GymLeader>
)

<Type> CLOSED {
    (  $<Type_tes> rdf:type . * ;
       rdf:type [ <Type> ] ?
    )
}

